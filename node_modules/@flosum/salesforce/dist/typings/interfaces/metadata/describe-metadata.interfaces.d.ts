import { BaseSfdxCommandOptions } from './base.interfaces';
import { MetadataType } from '../../enums';
export declare type DescribeMetadataSfdxCommandOptions = BaseSfdxCommandOptions & {
    accessToken: string;
    apiVersion: string;
};
export declare type DescribeMetadataSoapBody = {
    'met:describeMetadata': {
        'met:asOfVersion': string;
    };
};
export declare type SoapDescribeMetadataResponse = {
    describeMetadataResponse: {
        result: SoapDescribeMetadataResult;
    };
};
declare type DescribeMetadataItemProperties = {
    directoryName: string;
    inFolder: boolean;
    metaFile: boolean;
    suffix: string;
    xmlName: MetadataType;
};
export declare type SoapDescribeMetadataItem = DescribeMetadataItemProperties & {
    childXmlNames?: MetadataType[] | MetadataType;
};
export declare type DescribeMetadataItem = DescribeMetadataItemProperties & {
    childXmlNames?: MetadataType[];
    parentXmlName?: MetadataType;
};
declare type DescribeMetadataResultProperties = {
    organizationNamespace: string;
    partialSaveAllowed: boolean;
    testRequired: boolean;
};
export declare type SoapDescribeMetadataResult = DescribeMetadataResultProperties & {
    metadataObjects: SoapDescribeMetadataItem[] | SoapDescribeMetadataItem;
};
export declare type DescribeMetadataResult = DescribeMetadataResultProperties & {
    metadataObjects: Record<string, DescribeMetadataItem>;
};
export {};
