/// <reference types="node" />
import { BaseSfdxCommandOptions, BaseSoapCommandOptions } from './base.interfaces';
import { ListMetadataItem } from './list-metadata.interfaces';
import { RetrieveResultStatus } from '../../enums/retreive.metadata.enums';
import { DescribeMetadataItem } from '..';
import { MetadataType } from '../../enums';
export declare type SourceRetrieveSfdxCommandOptions = BaseSfdxCommandOptions & {
    packageXMLPath: string;
    accessToken: string;
    apiVersion: string;
};
export declare type RetrieveSoapCommandOptions = BaseSoapCommandOptions & {
    types: RetrieveType[];
};
export declare type RetrieveMetadataSoapBody = {
    'met:retrieve': {
        'met:retrieveRequest': {
            'met:apiVersion': string;
            'met:singlePackage': boolean;
            'met:unpackaged': {
                'met:types': {
                    'met:name': string;
                    'met:members': string[];
                }[];
            };
        };
    };
};
export declare type SoapRetrieveMetadataResponse = {
    retrieveResponse: {
        result: RetrieveMetadataResult;
    };
};
export declare type RetrieveMetadataResult = {
    done: boolean;
    id: string;
    state: string;
};
export declare type RetrieveType = {
    name: MetadataType | string;
    members: string[];
};
export declare type CheckRetrieveStatusSoapCommandOptions = BaseSoapCommandOptions & {
    asyncProcessId: string;
    isIncludeZip: boolean;
};
export declare type CheckRetrieveStatusSoapBody = {
    'met:checkRetrieveStatus': {
        'met:asyncProcessId': string;
        'met:includeZip': boolean;
    };
};
export declare type SoapCheckRetrieveMetadataStatusResponse = {
    checkRetrieveStatusResponse: {
        result: SoapCheckRetrieveMetadataStatusResult;
    };
};
export declare type SoapCheckRetrieveMetadataStatusResult = {
    done: boolean;
    fileProperties?: ListMetadataItem[] | ListMetadataItem;
    id: string;
    status: RetrieveResultStatus;
    errorMessage?: string;
    errorStatusCode?: string;
    success: boolean;
    zipFile?: string | any;
    messages?: CheckRetrieveMetadataStatusMessage[] | CheckRetrieveMetadataStatusMessage;
};
export declare type CheckRetrieveMetadataStatusResult = SoapCheckRetrieveMetadataStatusResult & {
    fileProperties: ListMetadataItem[];
    messages?: CheckRetrieveMetadataStatusMessage[];
};
export declare type CheckRetrieveMetadataStatusMessage = {
    filename: string;
    problem: string;
};
export declare type MetadataItem = DescribeMetadataItem & {
    components: MetadataComponent[];
};
export interface MetadataComponent {
    listMetadataItem: ListMetadataItem;
    files: Record<string, Buffer>;
}
export declare type SoapRetrieveMetadataResult = {
    items: Record<string, MetadataItem>;
    warnings: CheckRetrieveMetadataStatusMessage[];
};
export declare type ContentFile = {
    content: Buffer;
    parsedXml?: Record<string, any>;
};
export declare type RetrieverResult = {
    files: Record<string, ContentFile>;
    warnings?: CheckRetrieveMetadataStatusMessage[];
};
