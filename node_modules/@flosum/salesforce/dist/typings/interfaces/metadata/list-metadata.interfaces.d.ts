import { BaseSfdxCommandOptions, BaseSoapCommandOptions } from './base.interfaces';
import { MetadataType } from '../../enums/type.metadata.enum';
import { ManageableState } from '../../enums';
export declare type ListMetadataSfdxCommandOptions = BaseSfdxCommandOptions & {
    metadataType: string;
    accessToken: string;
    apiVersion: string;
    folder?: string;
};
export declare type ListMetadataSoapCommandOptions = BaseSoapCommandOptions & {
    types: ListMetadataType[];
};
export declare type ListMetadataType = {
    metadataType: string;
    folder?: string;
};
export declare type ListMetadataSoapBody = {
    'met:listMetadata': {
        'met:queries': {
            'met:folder': string;
            'met:type': string;
        }[];
        'met:asOfVersion': string;
    };
};
export declare type SoapListMetadataResponse = {
    listMetadataResponse: {
        result: ListMetadataItem[] | ListMetadataItem;
    };
};
export declare type ListMetadataItem = {
    createdById: string;
    createdByName: string;
    createdDate: string;
    fileName: string;
    fullName: string;
    id: string;
    lastModifiedById: string;
    lastModifiedByName: string;
    lastModifiedDate: string;
    manageableState: ManageableState;
    namespacePrefix?: string;
    type: MetadataType;
};
export declare type MetadataItemData = {
    listMetadataItem: ListMetadataItem;
    manifest: {
        type: MetadataType;
        member: string;
    };
    uniqueName?: string;
};
export declare type ListMetadataItemDetails = {
    main?: MetadataItemData;
    child?: MetadataItemData[];
};
export declare type ListMetadataCommandResult = ListMetadataItem[];
