import { AxiosInstance } from 'axios';
import QueryBuilder from '../classes/query-builder';
import { BulkV1QueryContentType } from '../enums';
import { Bulk1JobOperation } from '../enums/bulk1.enums';
import { Logger } from './logger.interfaces';
export interface RetrieveRequest {
    instance: AxiosInstance;
    queryBuilder: QueryBuilder;
    isTooling?: boolean;
    api: string;
    logger?: Logger;
}
export interface RetrieveRequestBulk2 extends RetrieveRequest {
    pollInterval: number;
    maxRecords: number;
}
export interface RetrieveRequestStandardRest extends RetrieveRequest {
    maxRecords?: number;
    isQueryAll?: boolean;
}
export interface RetrieveRequestComposite extends RetrieveRequest {
    isQueryAll?: boolean;
    maxRecords?: number;
}
export interface RetrieveRequestBulk1PK extends RetrieveRequest {
    pollInterval: number;
    objectName: string;
    contentType: BulkV1QueryContentType;
    jobOperation?: Bulk1JobOperation;
    chunkSize?: number;
}
export interface RetrieveRequestBulk1ById extends RetrieveRequest {
    pollInterval: number;
    objectName: string;
    contentType: BulkV1QueryContentType;
    jobOperation: Bulk1JobOperation;
    chunkSize: number;
    maxParallelBatches: number;
    ids: string[];
}
export interface RetrieveRequestBulk1 extends RetrieveRequest {
    pollInterval: number;
    objectName: string;
    contentType: BulkV1QueryContentType;
    jobOperation?: Bulk1JobOperation;
}
export interface RetrieveResult {
    records: Record<string, any>[];
}
