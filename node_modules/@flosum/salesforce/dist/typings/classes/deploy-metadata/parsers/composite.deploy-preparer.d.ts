import { MetadataComponent } from '../../../interfaces';
import BaseDeployPreparer, { DeployComponent } from './base.deploy-preparer';
import { MetadataType } from '../../../enums';
/**
 * Used for combine components to one file (for example CustomFields, RecordTypes etc. to CustomObject)
 * @param main component as CustomObject, Workflow...
 * @param children components as CustomField, RecordType, WorkflowTask...
 * @param parentXmlName type of main component (main field is optional)
 * @param fileName for composite component
 */
export interface CompositeDeployPreparerOptions {
    main?: MetadataComponent;
    children?: MetadataComponent[];
    parentXmlName?: MetadataType;
    fileName: string;
}
export default class CompositeDeployPreparer extends BaseDeployPreparer {
    private readonly _component;
    constructor(_component: CompositeDeployPreparerOptions);
    private prepareParentComponents;
    execute(): Promise<DeployComponent>;
}
