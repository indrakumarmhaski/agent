import { AxiosInstance } from 'axios';
import { SimpleDeployData, BinaryDeployData, CompositeBinaryData, RestBinaryData, DeployDataResult } from '../../interfaces/deploy.interfaces';
export default abstract class BaseDeployData {
    protected readonly instance: AxiosInstance;
    protected readonly objectName: string;
    protected readonly externalIdField: string;
    protected readonly allOrNone: boolean;
    protected readonly api: string;
    constructor(instance: AxiosInstance, objectName: string, externalIdField: string, allOrNone: boolean, api: string);
    abstract execute(payload: SimpleDeployData | BinaryDeployData | CompositeBinaryData | RestBinaryData | string | ArrayBuffer): Promise<DeployDataResult[]>;
    abstract close(): Promise<void>;
}
