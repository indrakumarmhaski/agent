import { Bulk1BatchDetails } from '../../interfaces/bulk1.interfaces';
import { Bulk1JobContentType } from '../../enums/bulk1.enums';
import BaseDeployData from './base-deploy-data';
import { DeployDataResult, DeployRequestBulk1 } from '../../interfaces/deploy.interfaces';
import { CastingContext } from 'csv-parse';
export default abstract class BaseBulkv1DeployData extends BaseDeployData {
    protected readonly pollInterval: number;
    protected jobId: string;
    private createDate;
    private readonly operation;
    constructor({ instance, objectName, externalIdField, allOrNone, api, operation, pollInterval, }: DeployRequestBulk1);
    protected createJob(contentType: Bulk1JobContentType): Promise<void>;
    close(): Promise<void>;
    protected waitCompletionBatch(batchId: string): Promise<Bulk1BatchDetails>;
    protected handleResultBatch(resultBatch: string): DeployDataResult[];
    protected castCsvValue(value: string, { header, column }: CastingContext): any;
}
