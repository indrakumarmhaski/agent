import { AxiosInstance } from 'axios';
export declare type ManagerAutomationProcessOptions = {
    instance: AxiosInstance;
    saveSourceMetadataBackup?: (base64: string) => Promise<void>;
    triggersObjects: string[];
    validationRulesObjects: string[];
    workflowsObjects: string[];
    processBuilderObjects: string[];
    lookupFiltersObjects: string[];
};
export default class ManagerAutomationProcess {
    private readonly instance;
    private readonly saveSourceMetadataBackup?;
    private readonly automationProcesses;
    private _base64Source;
    private _base64Target;
    private _sourceZip;
    private _targetZip;
    private _isDisabled;
    constructor({ instance, saveSourceMetadataBackup, triggersObjects, validationRulesObjects, workflowsObjects, processBuilderObjects, lookupFiltersObjects, }: ManagerAutomationProcessOptions);
    private getTargetManifest;
    private getSourceManifest;
    private generateBase64Target;
    enable(): Promise<void>;
    disable(): Promise<void>;
    private validate;
    private retrieveMetadata;
    private deployMetadata;
}
