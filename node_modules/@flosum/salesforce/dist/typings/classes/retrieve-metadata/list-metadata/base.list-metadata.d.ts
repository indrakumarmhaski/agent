import { ListMetadataItem, MetadataItemData, ListMetadataType } from '../../../interfaces';
import { Logger } from '../../../interfaces/logger.interfaces';
import { AxiosInstance } from 'axios';
export declare type BaseListMetadataOptions = {
    apiVersion: string;
    axiosInstance: AxiosInstance;
    logger: Logger;
};
export default abstract class BaseListMetadata {
    protected readonly apiVersion: BaseListMetadataOptions['apiVersion'];
    protected readonly axiosInstance: BaseListMetadataOptions['axiosInstance'];
    protected readonly logger: BaseListMetadataOptions['logger'];
    constructor({ apiVersion, axiosInstance, logger }: BaseListMetadataOptions);
    abstract execute(): Promise<MetadataItemData[]>;
    protected listMetadata(types: ListMetadataType[]): Promise<MetadataItemData[]>;
    protected addManifest(items: ListMetadataItem[]): MetadataItemData[];
}
