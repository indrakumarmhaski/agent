import { AxiosInstance, AxiosRequestConfig } from 'axios';
import { ToolingApiPackageInstallRequestByIdResponse } from '../interfaces/internal/tooling-api.interfaces';
interface InstallPackageResult {
    installationId: string;
}
interface FetchStatusResult {
    status: ToolingApiPackageInstallRequestByIdResponse['Status'];
}
interface FindLatestInstallationIdForPackageResult {
    installationId: string;
}
export default class PackagesService {
    static isInstalled(instance: AxiosInstance, config: AxiosRequestConfig, packageId: string, api: string): Promise<boolean>;
    static installPackage(instance: AxiosInstance, config: AxiosRequestConfig, packageId: string, api: string): Promise<InstallPackageResult>;
    static fetchStatus(instance: AxiosInstance, config: AxiosRequestConfig, installationId: string, api: string): Promise<FetchStatusResult>;
    static findLatestInstallationIdForPackage(instance: AxiosInstance, config: AxiosRequestConfig, packageId: string, api: string): Promise<FindLatestInstallationIdForPackageResult>;
}
export {};
