/// <reference types="node" />
import { AxiosInstance, AxiosRequestConfig } from 'axios';
import { Bulk1BatchDetails, Bulk1JobClose, Bulk1JobDetails, Bulk1JobPayload } from '../interfaces/bulk1.interfaces';
import * as stream from 'stream';
export default class Bulk1Service {
    static createJob(instance: AxiosInstance, payload: Bulk1JobPayload, config: AxiosRequestConfig, api: string): Promise<Bulk1JobDetails>;
    static createBatch(instance: AxiosInstance, payload: string | ArrayBuffer, config: AxiosRequestConfig, jobId: string, api: string): Promise<Bulk1BatchDetails>;
    static getBatchInfo(instance: AxiosInstance, config: AxiosRequestConfig, jobId: string, batchId: string, api: string): Promise<Bulk1BatchDetails>;
    static getAllBatchInfo(instance: AxiosInstance, config: AxiosRequestConfig, jobId: string, api: string): Promise<Bulk1BatchDetails[]>;
    static closeJob(instance: AxiosInstance, config: AxiosRequestConfig, payload: Bulk1JobClose, jobId: string, api: string): Promise<void>;
    /**
     * @returns Array of the results OR exact result csv
     */
    static resultBatch(instance: AxiosInstance, config: AxiosRequestConfig, jobId: string, batchId: string, api: string): Promise<string | string[]>;
    static result<T extends string | stream.Readable>(instance: AxiosInstance, config: AxiosRequestConfig, jobId: string, batchId: string, resultId: string, api: string): Promise<T>;
}
