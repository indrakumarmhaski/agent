import shelljs from 'shelljs';
export type NpmMeta = {
    tarballUrl?: string;
    signatureUrl?: string;
    publicKeyUrl?: string;
    tarballLocalPath?: string;
    verified?: boolean;
    moduleName?: string;
    version?: string;
    tarballFilename?: string;
};
export type NpmShowResults = {
    versions: string[];
    'dist-tags': {
        [name: string]: string;
    };
    sfdx?: {
        publicKeyUrl: string;
        signatureUrl: string;
    };
    dist?: {
        [name: string]: string;
    };
};
export declare class NpmModule {
    private module;
    private version;
    private cliRoot?;
    npmMeta: NpmMeta;
    constructor(module: string, version?: string, cliRoot?: string | undefined);
    show(registry: string): NpmShowResults;
    pack(registry: string, options?: shelljs.ExecOptions): void;
    fetchTarball(registry: string, options?: shelljs.ExecOptions): Promise<void>;
    pollForAvailability(checkFn: () => void): Promise<void>;
}
