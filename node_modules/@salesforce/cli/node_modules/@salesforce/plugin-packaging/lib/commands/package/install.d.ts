import { SfCommand } from '@salesforce/sf-plugins-core';
import { Duration } from '@salesforce/kit';
import { PackagingSObjects } from '@salesforce/packaging';
export type PackageInstallRequest = PackagingSObjects.PackageInstallRequest;
export declare class Install extends SfCommand<PackageInstallRequest> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly deprecateAliases = true;
    static readonly aliases: string[];
    static readonly flags: {
        loglevel: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'target-org': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'api-version': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        wait: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<Duration, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'installation-key': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'publish-wait': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<Duration, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'no-prompt': import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        package: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'apex-compile': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<import("@salesforce/ts-types").Nullable<"package" | "all">, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'security-type': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<"AllUsers" | "AdminsOnly", import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'upgrade-type': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<"DeprecateOnly" | "Mixed" | "Delete", import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'skip-handlers': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string[] | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
    };
    private connection;
    private subscriberPackageVersion;
    run(): Promise<PackageInstallRequest>;
    protected finally(err?: Error): Promise<void>;
    private confirmUpgradeType;
    private confirmExternalSites;
}
