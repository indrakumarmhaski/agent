import { SfCommand } from '@salesforce/sf-plugins-core';
import { PackageType } from '@salesforce/packaging';
export type PackageCreate = {
    Id: string;
};
export declare class PackageCreateCommand extends SfCommand<PackageCreate> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly deprecateAliases = true;
    static readonly aliases: string[];
    static readonly requiresProject = true;
    static readonly flags: {
        loglevel: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'target-dev-hub': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'api-version': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        name: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'package-type': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<PackageType, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        description: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'no-namespace': import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        path: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'org-dependent': import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        'error-notification-username': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
    };
    run(): Promise<PackageCreate>;
    private display;
}
