import { ConvertResult } from '@salesforce/source-deploy-retrieve';
import { SfCommand } from '@salesforce/sf-plugins-core';
import { Interfaces } from '@oclif/core';
import { ConvertResultJson } from '../../../utils/types.js';
export declare class Source extends SfCommand<ConvertResultJson> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly requiresProject = true;
    static readonly aliases: string[];
    static readonly deprecateAliases = true;
    static readonly flags: {
        'api-version': {
            summary: string;
            name: string;
            char?: Interfaces.AlphabetLowercase | Interfaces.AlphabetUppercase | undefined;
            description?: string | undefined;
            helpLabel?: string | undefined;
            helpGroup?: string | undefined;
            env?: string | undefined;
            hidden?: boolean | undefined;
            required?: boolean | undefined;
            dependsOn?: string[] | undefined;
            exclusive?: string[] | undefined;
            exactlyOne?: string[] | undefined;
            relationships?: import("@oclif/core/lib/interfaces/parser.js").Relationship[] | undefined;
            deprecated?: true | Interfaces.Deprecation | undefined;
            aliases?: string[] | undefined;
            charAliases?: (Interfaces.AlphabetLowercase | Interfaces.AlphabetUppercase)[] | undefined;
            deprecateAliases?: boolean | undefined;
            noCacheDefault?: boolean | undefined;
            type: "option";
            helpValue?: string | undefined;
            options?: readonly string[] | undefined;
            multiple?: boolean | undefined;
            multipleNonGreedy?: boolean | undefined;
            delimiter?: "," | undefined;
            allowStdin?: boolean | "only" | undefined;
            parse: import("@oclif/core/lib/interfaces/parser.js").FlagParser<string | undefined, string, Interfaces.CustomOptions>;
            defaultHelp?: import("@oclif/core/lib/interfaces/parser.js").FlagDefaultHelp<string | undefined, Interfaces.CustomOptions>;
            input: string[];
            default?: import("@oclif/core/lib/interfaces/parser.js").FlagDefault<string | undefined, Interfaces.CustomOptions>;
        };
        loglevel: Interfaces.OptionFlag<string | undefined, Interfaces.CustomOptions>;
        'root-dir': Interfaces.OptionFlag<string | undefined, Interfaces.CustomOptions>;
        'output-dir': Interfaces.OptionFlag<string, Interfaces.CustomOptions>;
        'package-name': Interfaces.OptionFlag<string | undefined, Interfaces.CustomOptions>;
        manifest: Interfaces.OptionFlag<string | undefined, Interfaces.CustomOptions>;
        'source-dir': Interfaces.OptionFlag<string[], Interfaces.CustomOptions>;
        metadata: Interfaces.OptionFlag<string[], Interfaces.CustomOptions>;
    };
    protected convertResult: ConvertResult;
    private flags;
    private componentSet;
    run(): Promise<ConvertResultJson>;
    protected convert(): Promise<void>;
    protected resolveSuccess(): void;
    protected formatResult(): Promise<ConvertResultJson>;
}
