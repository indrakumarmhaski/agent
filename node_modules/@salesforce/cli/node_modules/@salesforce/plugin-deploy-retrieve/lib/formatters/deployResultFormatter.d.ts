import { DeployResult, FileResponseFailure } from '@salesforce/source-deploy-retrieve';
import { Org } from '@salesforce/core';
import { Duration } from '@salesforce/kit';
import { DeployResultJson, TestLevel, Verbosity, Formatter } from '../utils/types.js';
import { TestResultsFormatter } from '../formatters/testResultsFormatter.js';
export declare class DeployResultFormatter extends TestResultsFormatter implements Formatter<DeployResultJson> {
    protected result: DeployResult;
    protected flags: Partial<{
        'test-level': TestLevel;
        verbose: boolean;
        concise: boolean;
        'coverage-formatters': string[];
        junit: boolean;
        'results-dir': string;
        'target-org': Org;
        wait: Duration | number;
    }>;
    private relativeFiles;
    private absoluteFiles;
    private coverageOptions;
    private resultsDir;
    private readonly junit;
    constructor(result: DeployResult, flags: Partial<{
        'test-level': TestLevel;
        verbose: boolean;
        concise: boolean;
        'coverage-formatters': string[];
        junit: boolean;
        'results-dir': string;
        'target-org': Org;
        wait: Duration | number;
    }>);
    getJson(): Promise<DeployResultJson>;
    display(): void;
    determineVerbosity(): Verbosity;
    getFileResponseFailures(): FileResponseFailure[] | undefined;
    private maybeCreateRequestedReports;
    private createJunitResults;
    private transformDeployTestsResultsToTestResult;
    private createCoverageReport;
    private displayReplacements;
    private displaySuccesses;
    private displayFailures;
    private displayDeletes;
}
