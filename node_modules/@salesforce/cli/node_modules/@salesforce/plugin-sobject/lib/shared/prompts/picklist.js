import input from '@inquirer/input';
import { Messages } from '@salesforce/core';
/**
 * recursively keep adding picklist values until the user says to stop
 */
Messages.importMessagesDirectoryFromMetaUrl(import.meta.url);
const messages = Messages.loadMessages('@salesforce/plugin-sobject', 'prompts.shared');
export const picklistPrompts = async (soFar = []) => {
    const newItem = await input({
        validate: (i) => (soFar.find((v) => v.fullName === i) ? `${i} already exists` : true),
        message: soFar.length === 0 ? messages.getMessage('picklist.first') : messages.getMessage('picklist.additional'),
    });
    return newItem === undefined || newItem === ''
        ? // we're done adding items, return a ValueSet
            {
                valueSetDefinition: {
                    value: soFar,
                    sorted: true,
                },
            }
        : // recurse to add another item
            picklistPrompts([
                ...soFar,
                {
                    fullName: newItem,
                    label: newItem,
                    default: soFar.length === 0,
                },
            ]);
};
//# sourceMappingURL=picklist.js.map