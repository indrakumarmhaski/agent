import { SfCommand } from '@salesforce/sf-plugins-core';
import { SandboxProcessObject } from '@salesforce/core';
export declare class OrgCloneCommand extends SfCommand<SandboxProcessObject> {
    static readonly examples: string[];
    static readonly summary: string;
    static readonly description: string;
    static readonly strict = false;
    static state: string;
    static readonly hidden = true;
    static deprecationOptions: {
        to: string;
        version: string;
    };
    static readonly SANDBOXDEF_SRC_SANDBOXNAME = "SourceSandboxName";
    static readonly flags: {
        'target-org': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'api-version': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        type: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<"sandbox", import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        definitionfile: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        setdefaultusername: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        setalias: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        wait: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<import("@salesforce/kit").Duration, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        loglevel: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
    };
    private logger;
    run(): Promise<SandboxProcessObject>;
    setAlias(alias: string, username: string): Promise<void>;
    setDefaultUsername(username: string): Promise<void>;
}
