import { CancellationTokenSource, TestRunIdResult } from '@salesforce/apex-node';
import { SfCommand } from '@salesforce/sf-plugins-core';
import { Duration } from '@salesforce/kit';
import { RunResult } from '../../../reporters/index.js';
export declare const TestLevelValues: string[];
export type RunCommandResult = RunResult | TestRunIdResult;
export default class Test extends SfCommand<RunCommandResult> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly deprecateAliases = true;
    static readonly aliases: string[];
    static readonly flags: {
        'target-org': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'api-version': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        loglevel: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'code-coverage': import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        'output-dir': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'test-level': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'class-names': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string[], import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'result-format': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'suite-names': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string[], import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        tests: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string[], import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        wait: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<Duration, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        synchronous: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        'detailed-coverage': import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
    };
    protected cancellationTokenSource: CancellationTokenSource;
    run(): Promise<RunCommandResult>;
    private runTest;
    private runTestAsynchronous;
}
